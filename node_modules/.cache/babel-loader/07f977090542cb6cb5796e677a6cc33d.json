{"ast":null,"code":"const initialState = {\n  queue: [],\n  archive: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"addToQueue\":\n      return { ...state,\n        queue: state.queue.concat(action.payload)\n      };\n\n    case \"removeFromQueue\":\n      return { ...state,\n        queue: state.queue.filter((payload, index) => index !== action.payload)\n      };\n\n    case \"addToArchive\":\n      return { ...state,\n        archive: [...state.archive, ...state.queue.filter((payload, index) => index == action.payload)],\n        queue: state.queue.filter((payload, index) => index !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n}","map":{"version":3,"sources":["/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/redux/reducers/movieReducer.js"],"names":["initialState","queue","archive","state","action","type","concat","payload","filter","index"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE;AAFU,CAArB;AAIA,eAAe,UAASC,KAAK,GAAGH,YAAjB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYK,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;AAFF,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYO,MAAZ,CAAmB,CAACD,OAAD,EAAUE,KAAV,KAAoBA,KAAK,KAAKL,MAAM,CAACG,OAAxD;AAFF,OAAP;;AAIF,SAAK,cAAL;AACA,aAAO,EACL,GAAGJ,KADE;AAELD,QAAAA,OAAO,EAAE,CACL,GAAGC,KAAK,CAACD,OADJ,EAEL,GAAGC,KAAK,CAACF,KAAN,CAAYO,MAAZ,CAAmB,CAACD,OAAD,EAAUE,KAAV,KAAoBA,KAAK,IAAIL,MAAM,CAACG,OAAvD,CAFE,CAFJ;AAMLN,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYO,MAAZ,CAAmB,CAACD,OAAD,EAAUE,KAAV,KAAoBA,KAAK,KAAKL,MAAM,CAACG,OAAxD;AANF,OAAP;;AAQA;AACE,aAAOJ,KAAP;AArBJ;;AAsBC;AACF","sourcesContent":["const initialState = {\n  queue: [],\n  archive: []\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"addToQueue\":\n      return {\n        ...state,\n        queue: state.queue.concat(action.payload)\n      };\n    case \"removeFromQueue\":\n      return {\n        ...state,\n        queue: state.queue.filter((payload, index) => index !== action.payload)\n      };\n    case \"addToArchive\":\n    return {\n      ...state,\n      archive: [\n          ...state.archive,\n          ...state.queue.filter((payload, index) => index == action.payload)\n      ],\n      queue: state.queue.filter((payload, index) => index !== action.payload)\n    };\n    default:\n      return state;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}