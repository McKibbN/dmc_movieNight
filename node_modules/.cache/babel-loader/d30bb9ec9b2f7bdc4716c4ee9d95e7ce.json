{"ast":null,"code":"var _jsxFileName = \"/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/movieScreen/MovieQueue.js\";\nimport React, { Component } from 'react';\nimport FlatList from 'flatlist-react';\nimport { Card } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { removeFromQueue, addToArchive } from '../redux/actions/movieController.js';\nimport { modalInteraction } from '../redux/actions/postMovieModalController.js';\nimport PostMovie from './PostMovie.js';\n\nclass MovieQueue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMovie = (movie, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"queueCardContain\",\n        style: {\n          animation: `${this.state.shouldRender ? \"slideLeftStart\" : \"slideLeftEnd\"} 0.4s cubic-bezier(.21,.07,.3,.97)`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, i + 1, \".\"), /*#__PURE__*/React.createElement(Card, {\n        className: \"movieObjectContain\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"queueCardTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, \"\\\" \", movie.title, \" \\\"\"), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardGenre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, movie.genre), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardRuntime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, \"Runtime: \", movie.runtime), /*#__PURE__*/React.createElement(\"a\", {\n        href: movie.link,\n        className: \"queueCardLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, \"View Trailer\"), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardUser\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, \"Requested by \", movie.user), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"queueButtonContain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"queueRemoveButton\",\n        onAnimationEnd: this.state.shouldRender === false ? () => this.props.removeFromQueue(i) : null,\n        onClick: () => this.toggleRender(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, \"remove\"), /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: \"queueArchiveButton\",\n        onClick: () => this.props.addToArchive(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      }, \"archive\"))));\n    };\n\n    this.state = {\n      shouldRender: true\n    };\n    this.togglePost = this.togglePost.bind(this);\n  }\n\n  togglePost(e) {\n    e.preventDefault();\n    this.props.modalInteraction(true);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieQueueContain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"listTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"To Watch Queue\"), /*#__PURE__*/React.createElement(Button, {\n      className: \"addToQueueButton\",\n      onClick: this.togglePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"ADD\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieCards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FlatList, {\n      list: this.props.queue,\n      renderItem: this.renderMovie,\n      renderWhenEmpty: () => null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })), this.props.isPostMovieModalOpen ? /*#__PURE__*/React.createElement(PostMovie, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }) : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    queue: state.movieReducer.queue,\n    isPostMovieModalOpen: state.postMovieModalReducer.isPostMovieModalOpen\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeFromQueue: index => dispatch(removeFromQueue(index)),\n    addToArchive: index => dispatch(addToArchive(index)),\n    modalInteraction: modalState => dispatch(modalInteraction(modalState))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieQueue);","map":{"version":3,"sources":["/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/movieScreen/MovieQueue.js"],"names":["React","Component","FlatList","Card","Button","connect","removeFromQueue","addToArchive","modalInteraction","PostMovie","MovieQueue","constructor","props","renderMovie","movie","i","animation","state","shouldRender","title","genre","runtime","link","user","toggleRender","togglePost","bind","e","preventDefault","render","queue","isPostMovieModalOpen","mapStateToProps","movieReducer","postMovieModalReducer","mapDispatchToProps","dispatch","index","modalState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,YAA1B,QAA8C,qCAA9C;AACA,SAASC,gBAAT,QAAiC,8CAAjC;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AACjCU,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAapBC,WAboB,GAaN,CAACC,KAAD,EAAQC,CAAR,KAAc;AAC5B,0BACE;AACE,QAAA,KAAK,EAAC,kBADR;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAG,GAAE,KAAKC,KAAL,CAAWC,YAAX,GAA0B,gBAA1B,GAA6C,cAAe;AAA5E,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAIE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCH,CAAC,GAAG,CAArC,MAJF,eAKE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,GAAG,EAAEA,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAkCD,KAAK,CAACK,KAAxC,QADF,eAEE;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCL,KAAK,CAACM,KAAtC,CAFF,eAGE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2CN,KAAK,CAACO,OAAjD,CAHF,eAIE;AAAG,QAAA,IAAI,EAAEP,KAAK,CAACQ,IAAf;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAKE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA4CR,KAAK,CAACS,IAAlD,CALF,eAME;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,SAAS,EAAC,mBAHZ;AAIE,QAAA,cAAc,EAAE,KAAKN,KAAL,CAAWC,YAAX,KAA4B,KAA5B,GAAoC,MAAM,KAAKN,KAAL,CAAWN,eAAX,CAA2BS,CAA3B,CAA1C,GAA0E,IAJ5F;AAKE,QAAA,OAAO,EAAE,MAAM,KAAKS,YAAL,EALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,SAAS,EAAC,oBAAtD;AAA2E,QAAA,OAAO,EAAE,MAAM,KAAKZ,KAAL,CAAWL,YAAX,CAAwBQ,CAAxB,CAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CANF,CALF,CADF;AA2BD,KAzCqB;;AAElB,SAAKE,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGA,SAAKO,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,CAACE,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKhB,KAAL,CAAWJ,gBAAX,CAA4B,IAA5B;AACD;;AAgCDqB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAE,KAAKJ,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,KAAKb,KAAL,CAAWkB,KADnB;AAEE,MAAA,UAAU,EAAE,KAAKjB,WAFnB;AAGE,MAAA,eAAe,EAAE,MAAM,IAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAWM,KAAKD,KAAL,CAAWmB,oBAAX,gBAEA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,GAIA,IAfN,CADF;AAoBA;;AAjE+B;;AAqEnC,SAASC,eAAT,CAAyBf,KAAzB,EAAgC;AAC9B,SAAO;AACLa,IAAAA,KAAK,EAAEb,KAAK,CAACgB,YAAN,CAAmBH,KADrB;AAELC,IAAAA,oBAAoB,EAAEd,KAAK,CAACiB,qBAAN,CAA4BH;AAF7C,GAAP;AAID;;AAED,SAASI,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACL9B,IAAAA,eAAe,EAAE+B,KAAK,IAAID,QAAQ,CAAC9B,eAAe,CAAC+B,KAAD,CAAhB,CAD7B;AAEL9B,IAAAA,YAAY,EAAE8B,KAAK,IAAID,QAAQ,CAAC7B,YAAY,CAAC8B,KAAD,CAAb,CAF1B;AAGL7B,IAAAA,gBAAgB,EAAE8B,UAAU,IAAIF,QAAQ,CAAC5B,gBAAgB,CAAC8B,UAAD,CAAjB;AAHnC,GAAP;AAKD;;AAED,eAAejC,OAAO,CAAC2B,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CzB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport FlatList from 'flatlist-react';\nimport { Card } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { removeFromQueue, addToArchive } from '../redux/actions/movieController.js'\nimport { modalInteraction } from '../redux/actions/postMovieModalController.js';\nimport PostMovie from './PostMovie.js'\n\nclass MovieQueue extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      shouldRender: true\n    }\n    this.togglePost = this.togglePost.bind(this);\n  }\n\n  togglePost(e) {\n    e.preventDefault();\n    this.props.modalInteraction(true);\n  }\n\n  renderMovie = (movie, i) => {\n  return (\n    <div\n      class='queueCardContain'\n      style={{ animation: `${this.state.shouldRender ? \"slideLeftStart\" : \"slideLeftEnd\"} 0.4s cubic-bezier(.21,.07,.3,.97)` }}\n    >\n      <h4 className=\"queueCardNumber\">{i + 1}.</h4>\n      <Card className='movieObjectContain' key={i}>\n        <h3 className='queueCardTitle'>\" {movie.title} \"</h3>\n        <h4 className='queueCardGenre'>{movie.genre}</h4>\n        <h4 className='queueCardRuntime'>Runtime: {movie.runtime}</h4>\n        <a href={movie.link} className='queueCardLink'>View Trailer</a>\n        <h4 className='queueCardUser'>Requested by {movie.user}</h4>\n        <div className=\"queueButtonContain\">\n          <Button\n            variant=\"contained\"\n            color='secondary'\n            className='queueRemoveButton'\n            onAnimationEnd={this.state.shouldRender === false ? () => this.props.removeFromQueue(i) : null}\n            onClick={() => this.toggleRender()}\n          >\n            remove\n          </Button>\n          <Button variant=\"contained\" color='primary' className='queueArchiveButton' onClick={() => this.props.addToArchive(i)}>archive</Button>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\n  render() {\n    return (\n      <div className=\"movieQueueContain\">\n        <h2 className=\"listTitle\">To Watch Queue</h2>\n        <Button className=\"addToQueueButton\" onClick={this.togglePost}>ADD</Button>\n        <div className=\"movieCards\">\n          <FlatList\n            list={this.props.queue}\n            renderItem={this.renderMovie}\n            renderWhenEmpty={() => null}\n          />\n        </div>\n          {\n            this.props.isPostMovieModalOpen\n            ?\n            <PostMovie />\n            :\n            null\n          }\n      </div>\n    );\n   }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    queue: state.movieReducer.queue,\n    isPostMovieModalOpen: state.postMovieModalReducer.isPostMovieModalOpen\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeFromQueue: index => dispatch(removeFromQueue(index)),\n    addToArchive: index => dispatch(addToArchive(index)),\n    modalInteraction: modalState => dispatch(modalInteraction(modalState))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieQueue);\n"]},"metadata":{},"sourceType":"module"}