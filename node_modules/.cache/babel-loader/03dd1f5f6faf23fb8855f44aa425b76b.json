{"ast":null,"code":"var _jsxFileName = \"/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/movieScreen/PostMovie.js\";\nimport React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addToQueue } from '../redux/actions/movieController';\nimport { modalInteraction } from '../redux/actions/postMovieModalController.js';\n\nclass PostMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      link: \"\",\n      genre: \"\",\n      runtime: \"\",\n      user: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.title === '' || this.state.link === '' || this.state.genre === '' || this.state.runtime === '' || this.state.user === '') {\n      null;\n    } else {\n      this.props.addToQueue({\n        title: this.state.title,\n        link: this.state.link,\n        genre: this.state.genre,\n        runtime: this.state.runtime,\n        user: this.state.user\n      });\n      this.setState({\n        title: '',\n        link: '',\n        genre: '',\n        runtime: '',\n        user: ''\n      });\n      this.props.modalInteraction(false);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMovieBackground\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postMovieModal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"postMovieHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"Post Film Suggestion\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieForm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      className: \"postMovieInput\",\n      type: \"text\",\n      label: \"Title\",\n      name: \"title\",\n      value: this.state.title,\n      placeholder: \"Title\",\n      onChange: this.handleChange,\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      className: \"postMovieInput\",\n      type: \"text\",\n      label: \"Link\",\n      name: \"link\",\n      value: this.state.link,\n      placeholder: \"Link\",\n      onChange: this.handleChange,\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      className: \"postMovieInput\",\n      type: \"text\",\n      label: \"Genre\",\n      name: \"genre\",\n      value: this.state.genre,\n      placeholder: \"Genre\",\n      onChange: this.handleChange,\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      className: \"postMovieInput\",\n      type: \"text\",\n      label: \"Runtime\",\n      name: \"runtime\",\n      value: this.state.runtime,\n      placeholder: \"Runtime\",\n      onChange: this.handleChange,\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      required: true,\n      className: \"postMovieInput\",\n      type: \"text\",\n      label: \"User\",\n      name: \"user\",\n      value: this.state.user,\n      placeholder: \"User\",\n      onChange: this.handleChange,\n      variant: \"filled\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"postButton\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 14\n      }\n    }, \"Post\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"backdrop\",\n      onClick: () => this.props.modalInteraction(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToQueue: movie => dispatch(addToQueue(movie)),\n    modalInteraction: modalState => dispatch(modalInteraction(modalState))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(PostMovie);","map":{"version":3,"sources":["/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/movieScreen/PostMovie.js"],"names":["React","Component","TextField","Button","connect","addToQueue","modalInteraction","PostMovie","constructor","props","state","title","link","genre","runtime","user","handleChange","bind","handleSubmit","e","preventDefault","setState","target","name","value","render","mapDispatchToProps","dispatch","movie","modalState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { connect } from 'react-redux';\nimport { addToQueue } from '../redux/actions/movieController';\nimport { modalInteraction } from '../redux/actions/postMovieModalController.js';\n\n\nclass PostMovie extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      link: \"\",\n      genre: \"\",\n      runtime: \"\",\n      user: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.title === '' || this.state.link === '' || this.state.genre === '' || this.state.runtime === '' || this.state.user === '') {\n      null\n    } else {\n      this.props.addToQueue({\n        title: this.state.title,\n        link: this.state.link,\n        genre: this.state.genre,\n        runtime: this.state.runtime,\n        user: this.state.user\n      });\n      this.setState({\n        title: '',\n        link: '',\n        genre: '',\n        runtime: '',\n        user: ''\n      });\n      this.props.modalInteraction(false)\n    }\n  }\n\n  render() {\n    return(\n      <div className=\"postMovieBackground\">\n        <div className=\"postMovieModal\">\n          <h3 className=\"postMovieHeader\">Post Film Suggestion</h3>\n          <div className=\"movieForm\">\n             <TextField required className=\"postMovieInput\" type=\"text\" label=\"Title\" name=\"title\" value={this.state.title} placeholder=\"Title\" onChange={this.handleChange} variant=\"filled\"/>\n             <TextField required className=\"postMovieInput\" type=\"text\" label=\"Link\" name=\"link\" value={this.state.link} placeholder=\"Link\" onChange={this.handleChange} variant=\"filled\"/>\n             <TextField required className=\"postMovieInput\" type=\"text\" label=\"Genre\" name=\"genre\" value={this.state.genre} placeholder=\"Genre\" onChange={this.handleChange} variant=\"filled\"/>\n             <TextField required className=\"postMovieInput\" type=\"text\" label=\"Runtime\" name=\"runtime\" value={this.state.runtime} placeholder=\"Runtime\" onChange={this.handleChange} variant=\"filled\"/>\n             <TextField required className=\"postMovieInput\" type=\"text\" label=\"User\" name=\"user\" value={this.state.user} placeholder=\"User\" onChange={this.handleChange} variant=\"filled\"/>\n             <Button className=\"postButton\" onClick={this.handleSubmit}>Post</Button>\n          </div>\n        </div>\n        <div className='backdrop' onClick={() => this.props.modalInteraction(false)} />\n      </div>\n    )\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    addToQueue: movie => dispatch(addToQueue(movie)),\n    modalInteraction: modalState => dispatch(modalInteraction(modalState))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(PostMovie);\n"]},"metadata":{},"sourceType":"module"}