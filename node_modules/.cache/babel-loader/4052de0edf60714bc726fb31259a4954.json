{"ast":null,"code":"var _jsxFileName = \"/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/movieScreen/MovieQueue.js\";\nimport React, { Component } from 'react';\nimport FlatList from 'flatlist-react';\nimport { Card } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { removeFromQueue, addToArchive } from '../redux/actions/movieController.js';\nimport { modalInteraction } from '../redux/actions/postMovieModalController.js';\nimport PostMovie from './PostMovie.js';\n\nclass MovieQueue extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderMovie = (movie, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        class: \"queueCardContain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardNumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, i + 1, \".\"), /*#__PURE__*/React.createElement(Card, {\n        className: \"movieObjectContain\",\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"queueCardTitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, \"\\\" \", movie.title, \" \\\"\"), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardGenre\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, movie.genre), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardRuntime\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, movie.runtime), /*#__PURE__*/React.createElement(\"a\", {\n        href: movie.link,\n        className: \"queueCardLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, \"test\"), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"queueCardUser\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, movie.user), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"queueButtonContain\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"queueRemoveButton\",\n        onClick: () => this.props.removeFromQueue(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }\n      }, \"remove\"), /*#__PURE__*/React.createElement(Button, {\n        className: \"queueArchiveButton\",\n        onClick: () => this.props.addToArchive(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, \"archive\"))));\n    };\n\n    this.state = {};\n    this.togglePost = this.togglePost.bind(this);\n  }\n\n  togglePost(e) {\n    e.preventDefault();\n    this.props.modalInteraction(true);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieQueueContain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieQueueComponent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.togglePost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \"ADD\"), /*#__PURE__*/React.createElement(FlatList, {\n      list: this.props.queue,\n      renderItem: this.renderMovie,\n      renderWhenEmpty: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 36\n        }\n      }, \"List is empty!\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })), this.props.isPostMovieModalOpen ? /*#__PURE__*/React.createElement(PostMovie, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }) : null);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    queue: state.movieReducer.queue,\n    isPostMovieModalOpen: state.postMovieModalReducer.isPostMovieModalOpen\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeFromQueue: index => dispatch(removeFromQueue(index)),\n    addToArchive: index => dispatch(addToArchive(index)),\n    modalInteraction: modalState => dispatch(modalInteraction(modalState))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieQueue);","map":{"version":3,"sources":["/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/movieScreen/MovieQueue.js"],"names":["React","Component","FlatList","Card","Button","connect","removeFromQueue","addToArchive","modalInteraction","PostMovie","MovieQueue","constructor","props","renderMovie","movie","i","title","genre","runtime","link","user","state","togglePost","bind","e","preventDefault","render","queue","isPostMovieModalOpen","mapStateToProps","movieReducer","postMovieModalReducer","mapDispatchToProps","dispatch","index","modalState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FlatList from 'flatlist-react';\nimport { Card } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { removeFromQueue, addToArchive } from '../redux/actions/movieController.js'\nimport { modalInteraction } from '../redux/actions/postMovieModalController.js';\nimport PostMovie from './PostMovie.js'\n\nclass MovieQueue extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {}\n    this.togglePost = this.togglePost.bind(this);\n  }\n\n  togglePost(e) {\n    e.preventDefault();\n    this.props.modalInteraction(true);\n  }\n\n  renderMovie = (movie, i) => {\n  return (\n    <div class='queueCardContain'>\n      <h4 className=\"queueCardNumber\">{i + 1}.</h4>\n      <Card className='movieObjectContain' key={i}>\n        <h3 className='queueCardTitle'>\" {movie.title} \"</h3>\n        <h4 className='queueCardGenre'>{movie.genre}</h4>\n        <h4 className='queueCardRuntime'>{movie.runtime}</h4>\n        <a href={movie.link} className='queueCardLink'>test</a>\n        <h4 className='queueCardUser'>{movie.user}</h4>\n        <div className=\"queueButtonContain\">\n          <Button className='queueRemoveButton' onClick={() => this.props.removeFromQueue(i)}>remove</Button>\n          <Button className='queueArchiveButton' onClick={() => this.props.addToArchive(i)}>archive</Button>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\n  render() {\n    return (\n      <div className=\"movieQueueContain\">\n        <div className=\"movieQueueComponent\">\n          <Button onClick={this.togglePost}>ADD</Button>\n          <FlatList\n            list={this.props.queue}\n            renderItem={this.renderMovie}\n            renderWhenEmpty={() => <div>List is empty!</div>}\n          />\n        </div>\n          {\n            this.props.isPostMovieModalOpen\n            ?\n            <PostMovie />\n            :\n            null\n          }\n      </div>\n    );\n   }\n}\n\n\nfunction mapStateToProps(state) {\n  return {\n    queue: state.movieReducer.queue,\n    isPostMovieModalOpen: state.postMovieModalReducer.isPostMovieModalOpen\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    removeFromQueue: index => dispatch(removeFromQueue(index)),\n    addToArchive: index => dispatch(addToArchive(index)),\n    modalInteraction: modalState => dispatch(modalInteraction(modalState))\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieQueue);\n"]},"metadata":{},"sourceType":"module"}