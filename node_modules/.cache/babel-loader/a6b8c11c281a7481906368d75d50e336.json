{"ast":null,"code":"const initialState = {\n  queue: [{\n    title: \"test\",\n    genre: \"test\",\n    link: 'test',\n    runtime: 'test',\n    user: 'test'\n  }],\n  archive: [],\n  marqueeFilm: []\n};\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case \"addToQueue\":\n      return { ...state,\n        queue: state.queue.concat(action.payload)\n      };\n\n    case \"removeFromQueue\":\n      return { ...state,\n        queue: state.queue.filter((payload, index) => index !== action.payload)\n      };\n\n    case \"addToMarquee\":\n      return { ...state,\n        marqueeFilm: state.marqueeFilm.concat(action.payload),\n        queue: state.queue.filter((payload, index) => index !== action.payload)\n      };\n\n    case \"addToArchive\":\n      return { ...state,\n        archive: [...state.archive, ...state.marqueeFilm.filter((payload, index) => index === action.payload)],\n        marqueeFilm: []\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n}","map":{"version":3,"sources":["/Users/averyangel/Documents/GitHub/dmc_movienight/src/components/redux/reducers/movieReducer.js"],"names":["initialState","queue","title","genre","link","runtime","user","archive","marqueeFilm","state","action","type","concat","payload","filter","index"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CAAC;AAACC,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,KAAK,EAAE,MAAvB;AAA+BC,IAAAA,IAAI,EAAE,MAArC;AAA6CC,IAAAA,OAAO,EAAE,MAAtD;AAA8DC,IAAAA,IAAI,EAAE;AAApE,GAAD,CADY;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,WAAW,EAAE;AAHM,CAArB;AAMA,eAAe,UAASC,KAAK,GAAGT,YAAjB,EAA+BU,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,YAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELR,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYW,MAAZ,CAAmBF,MAAM,CAACG,OAA1B;AAFF,OAAP;;AAIF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELR,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYa,MAAZ,CAAmB,CAACD,OAAD,EAAUE,KAAV,KAAoBA,KAAK,KAAKL,MAAM,CAACG,OAAxD;AAFF,OAAP;;AAIF,SAAK,cAAL;AACA,aAAO,EACL,GAAGJ,KADE;AAELD,QAAAA,WAAW,EAAEC,KAAK,CAACD,WAAN,CAAkBI,MAAlB,CAAyBF,MAAM,CAACG,OAAhC,CAFR;AAGLZ,QAAAA,KAAK,EAAEQ,KAAK,CAACR,KAAN,CAAYa,MAAZ,CAAmB,CAACD,OAAD,EAAUE,KAAV,KAAoBA,KAAK,KAAKL,MAAM,CAACG,OAAxD;AAHF,OAAP;;AAKA,SAAK,cAAL;AACA,aAAO,EACL,GAAGJ,KADE;AAELF,QAAAA,OAAO,EAAE,CACL,GAAGE,KAAK,CAACF,OADJ,EAEL,GAAGE,KAAK,CAACD,WAAN,CAAkBM,MAAlB,CAAyB,CAACD,OAAD,EAAUE,KAAV,KAAoBA,KAAK,KAAKL,MAAM,CAACG,OAA9D,CAFE,CAFJ;AAMLL,QAAAA,WAAW,EAAE;AANR,OAAP;;AAQA;AACE,aAAOC,KAAP;AA3BJ;;AA4BC;AACF","sourcesContent":["const initialState = {\n  queue: [{title: \"test\", genre: \"test\", link: 'test', runtime: 'test', user: 'test'}],\n  archive: [],\n  marqueeFilm: []\n\n}\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case \"addToQueue\":\n      return {\n        ...state,\n        queue: state.queue.concat(action.payload)\n      };\n    case \"removeFromQueue\":\n      return {\n        ...state,\n        queue: state.queue.filter((payload, index) => index !== action.payload)\n      };\n    case \"addToMarquee\":\n    return {\n      ...state,\n      marqueeFilm: state.marqueeFilm.concat(action.payload),\n      queue: state.queue.filter((payload, index) => index !== action.payload)\n    };\n    case \"addToArchive\":\n    return {\n      ...state,\n      archive: [\n          ...state.archive,\n          ...state.marqueeFilm.filter((payload, index) => index === action.payload)\n      ],\n      marqueeFilm: []\n    };\n    default:\n      return state;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}